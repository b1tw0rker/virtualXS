#!/bin/bash

### Version: 1.1.20
### Build date: 06.03.2023
### (C) 2021-2023 by Dipl. Wirt.-Ing. Nick Herrmann
### This program is WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
###
###

### Sources
### color formating: https://misc.flogisoft.com/bash/tip_colors_and_formatting
###

### prework
###
###
dir001=/tmp/.virtualXS
if [ ! -d "$dir001" ]; then
    mkdir $dir001
fi

### get osversion
###
###
if [ -f "/etc/rocky-release" ]; then
    OS=ROCKY
    VERSION=$(cat /etc/rocky-release | cut -d' ' -f 4)
fi

clear

### some vars
###
###
infocolor=$(tput setaf 6) # DEV
tput setaf 6
u_version=1.1.20
u_ip4=$(hostname --all-ip-addresses | cut -d' ' -f 1)
u_hostname=$(hostname)
### get the ip of the client ssh
### https://unix.stackexchange.com/questions/322227/how-to-get-ssh-client-ip-address-using-shell-script
u_client_ip=$(echo "$SSH_CLIENT" | cut -d' ' -f 1)
u_path=/opt/virtualXS # no ending slash
u_server=w
u_eth=eth0
u_aws=n
u_all=n

### correct time rules first
###
###
timedatectl set-timezone Europe/Berlin

### set new hostname
###
###
hostnamectl set-hostname $u_hostname

### print centered some lines and write some infos
### https://superuser.com/questions/823883/how-to-justify-and-center-text-in-bash/829870
###
print_center() {
    local x
    local y
    text="$*"
    x=$((($(tput cols) - ${#text}) / 2))
    echo -ne "\E[6n"
    read -sdR y
    y=$(echo -ne "${y#*[}" | cut -d';' -f1)
    echo -ne "\033[${y};${x}f$*"
}

echo -ne "\\033[2J\033[30;1f\e[94m"

print_center "********************************************************************\n"
print_center "*                                                                  *\n"
print_center " *            Welcome to VirtualXS Install - Version $u_version         *\n"
print_center " *                    Detected OS: $OS - Version: $VERSION             *\n"
print_center " *                                                                  *\n"
print_center " ********************************************************************\n"
printf "\n"

if [ ! -f "$dir001/disclaimer" ]; then

    printf "\n\n\e[41mATTENTION:\e[0m This script is designed ONLY on freshly installed server. \e[41mDO NOT USE THIS SCRIPT ON A PRODUCTION MACHINE!!!\e[0m To confirm this, type: \"install\" to go on : "
    read u_disclaimer
    if [ "$u_disclaimer" != "install" ]; then
        exit
    fi

    touch $dir001/disclaimer

fi

### q prework - ask for ip and servername
###
###
read -p "Set Server IP adress: " -ei $u_ip4 u_ip
read -p "Set Servername (FQDN): " -ei $u_hostname u_srv
u_domain=$(echo "$u_srv" | cut -d'.' -f 2,3)
read -p "Domain (eg. domain.tld): " -ei $u_domain u_domain
read -p "Your IP (Client IP): " -ei $u_client_ip u_client_ip

### Detect and/or set eth
###
###
if [ -f "$dir001/interface" ]; then
    INTERFACE=$(cat $dir001/interface)
    read -p "NetzwerkSchnittstelle: " -ei $INTERFACE u_eth
else
    read -p "NetzwerkSchnittstelle: " -ei $u_eth u_eth
    printf "$u_eth" >$dir001/interface
fi

###
###
###
read -p "Upcoming MySQL root password: " u_mysql_pwd
read -p "Create Web or DNS Server [w/d]: " -ei $u_server u_server
read -p "Create on AWS [y/n]: " -ei $u_aws u_aws

if [ "$u_server" = "d" ]; then
    u_bitworker_repo=y
    u_epel_repo=y
    u_dnf_update=y
    u_sql_server=mysql
    u_dnf=n
    u_php74=n
    u_phpfpmfix=n
    u_disable_apps=y
    u_enable_apps=n
    u_start_apps=n
    u_folders_create=y
    u_postfix=n
    u_ssh=y
    u_fail2ban=y
    u_httpd=n
    u_dovecot=n
    u_certbot=n
    u_autoconfig=n
    u_vsftpd=n
    u_mysql=y
    u_ssl=n
    u_backup=n
    u_quota=n
    u_webmin=n
    u_magento_dnf=n
    u_firewall=
    u_start_firewall=
fi

### q RUN ALL
###
###
#if [ "$u_server" = "w" ]; then
#    #printf "\n\n***********************************************\n\nRun all the stuff at once (All except DNS Server Settings) - EXPERIMENTAL [y/n]: "
#    #read u_all
#    read -p "Run all the stuff at once (All except DNS Server Settings) - EXPERIMENTAL [y/n]: " -ei $u_all u_all
#
#    if [ "$u_all" = "y" ]; then
#        u_bitworker_repo=y
#        u_epel_repo=y
#        u_sql_server=mysql
#        u_dnf_update=y
#        u_dnf=y
#        u_php74=y
#        u_phpfpmfix=y
#        u_disable_apps=y
#        u_enable_apps=y
#        u_start_apps=y
#        u_folders_create=y
#        u_postfix=y
#        u_ssh=y
#        u_fail2ban=y
#        u_httpd=y
#        u_dovecot=y
#        u_certbot=y
#        u_autoconfig=y
#        u_vsftpd=y
#        u_mysql=y
#        u_ssl=y
#        u_backup=y
#        u_quota=y
#        u_webmin=y
#        u_firewall=
#        u_start_firewall=
#    fi
#fi

### set hostname
###
###
hostnamectl set-hostname $u_srv

### q run virtx.repo
###
###
if [ ! -f "/etc/yum.repos.d/virtx.repo" ]; then

    printf "\n\n***********************************************\n\nAdd VIRTX Repo? [y/n]: "
    if [ "$u_virtx_repo" = "" ]; then
        read u_virtx_repo
    fi

    if [ "$u_virtx_repo" = "y" ]; then
        dnf config-manager --add-repo https://repo.virt-x.de/virtx.repo
    fi

fi

### q run epel.repo
###
###
if [ ! -f "/etc/yum.repos.d/epel.repo" ]; then

    printf "\n\n***********************************************\n\nAdd Epel Repo? [y/n]: "
    if [ "$u_epel_repo" = "" ]; then
        read u_epel_repo
    fi

    if [ "$u_epel_repo" = "y" ]; then

        dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

    else

        printf "Leaving vxs - Without epel, you can not use this app.\n"
        exit

    fi

fi

u_sql_server=mysql
printf "\n\n***********************************************\n\n"
read -p "Install Mysql or MariaDB? [mysql/maria]: " -ei $u_sql_server u_sql_server
#printf "\n\n***********************************************\n\nInstall Mysql or MariaDB? (EXPERIMENTAL) [mysql/maria]: "
#if [ "$u_sql_server" = "" ]; then
#    read u_sql_server
#fi

if [ "$u_sql_server" = "maria" ]; then
    db_server=mariadb-server
else
    db_server=mysql-server
fi

### q install dnf
###
###
source $u_path/lib/lib_dnf.sh

### q Reboot
###
###
if [ ! -f "$dir001/rebooted" ]; then
    printf "\n\n***********************************************\n\nReboot your machine now - Strongly recommended if this is the initial run [y/n]: "
    if [ "$u_reboot1" = "" ]; then
        read u_reboot1
    fi
    if [ "$u_reboot1" = "y" ]; then
        touch $dir001/rebooted
        reboot
    fi
fi
### q install php 7.4
### do not show if we install on ROCKY 9. ROCKY 9 will install php 8 by default
###
if [ "$OS" = "ROCKY" ] && [ "$VERSION" = "9.0" ]; then
    source $u_path/lib/lib_rocky9.sh
else
    source $u_path/lib/lib_php74.sh
fi

### q apps
###
###
source $u_path/lib/lib_apps_disable.sh
source $u_path/lib/lib_apps.sh

### q create standard folders
###
###
source $u_path/lib/lib_folders.sh

### q config Posftix
###
###
source $u_path/lib/lib_postfix.sh

### q config SSH
###
###
if [ "$u_aws" = "n" ]; then
    source $u_path/lib/lib_ssh.sh
fi

### q config fail2ban
###
###
source $u_path/lib/lib_fail2ban.sh

### q config helper apps
###
###
source $u_path/lib/lib_helper_apps.sh

### q config httpd
###
###
source $u_path/lib/lib_httpd.sh

### q activate protocol http/2
###
###
source $u_path/lib/lib_httpd2.sh

### q config dovecot
###
###
source $u_path/lib/lib_dovecot.sh

### q config certbot
###
###
source $u_path/lib/lib_certbot.sh

### q config autoconfig
###
###
source $u_path/lib/lib_autoconfig.sh

### q config vsftpd
###
###
source $u_path/lib/lib_vsftpd.sh

### q config mysql
###
###
source $u_path/lib/lib_mysql.sh

### q config ssl
###
###
if [ "$u_aws" = "n" ]; then
    source $u_path/lib/lib_ssl.sh
fi

### q config backup
###
###
source $u_path/lib/lib_backup.sh

### q config backup
###
###
source $u_path/lib/lib_quota.sh

### q dns server
###
###
if [ "$u_server" = "d" ]; then
    source $u_path/lib/lib_powerdns.sh
fi

### q Webmin
###
###
source $u_path/lib/lib_webmin.sh

### q install magento
###
###
### source $u_path/lib/lib_magento.sh

### /etc/firewall
###
###
if [ "$u_aws" = "n" ]; then
    source $u_path/lib/lib_firewall.sh
fi

### /etc/logrotate.conf
###
###
source $u_path/lib/lib_logrotate.sh

### /etc/selinux/config
###
###
source $u_path/lib/lib_selinux.sh

### /etc/crontab
###
###
source $u_path/lib/lib_cron.sh

### do this ahain, for security reason
### we to be absolutly surem that this shit is turned off
if [ -f "/etc/systemd/system/multi-user.target.wants/firewalld.service" ]; then
    systemctl disable firewalld
fi

### q Reboot
###
###
if [ "$u_aws" = "n" ]; then
    printf "\n\n***********************************************\n\nReboot your machine now [y/n]: "
    if [ "$u_reboot" = "" ]; then
        read u_reboot
    fi
fi

printf "\n\n"
print_center "********************************************************************\n"
print_center "*                                                                  *\n"
print_center "*                  Thanks for working with VXS                     *\n"
print_center "*                                                                  *\n"
print_center "*                                                                  *\n"
print_center "*                TEST NOW YOUR SSH CONNECTION !!!                  *\n"
print_center "*                                                                  *\n"
print_center "*                                                                  *\n"
print_center "*                      Have a nice day ;-)                         *\n"
print_center "*                                                                  *\n"
print_center "********************************************************************\n"
printf "\n"

if [ -e "/tmp/time.log" ]; then
    unlink /tmp/time.log
fi

if [ "$u_aws" = "n" ]; then
    if [ "$u_reboot" = "y" ]; then
        reboot
    fi
fi

### bye bye
###
###
exit 0
